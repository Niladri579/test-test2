# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
    batch: true
    branches: 
        include: 
        - dev
    
    paths: 
        exclude: 
        - azure-pipelines.yml
    

pool:
  vmImage: ubuntu-latest

variables:
- group: Build-Variable-Group
- name: MAVEN_CACHE_FOLDER
  value: $(Pipeline.Workspace)/.m2/repository
- name: MAVEN_OPTS
  value: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'


steps:

- task: CacheBeta@0
  inputs:
    key: pom.xml
    path: $(MAVEN_CACHE_FOLDER)
  displayName: Cache Maven local Repo

- task: DownloadSecureFile@1
  name: settingsxml
  inputs:
    secureFile: 'settings.xml'

- task: Powershell@2
  inputs:
    targetType: 'inline'
    script: |
        New-Item -Type Directory -Force "${HOME}/.m2"
        Copy-Item -Force "$(settingsxml.secureFilePath)" "${HOME}/.m2/settings.xml"
        
        

- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    mavenAuthenticateFeed: true
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    effectivePomSkip: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'clean install package deploy $(MAVEN_OPTS) -DmuleDeploy -Dserver=$(server) -Denvironment=$(environment) -Dworkers=$(workers) -DworkerType=$(workerType) -Dapp.runtime=$(app.runtime) -Dapp.name=$(app.name) -X'
    
  
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(build.artifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(pipeline.workspace)'
    publishLocation: 'pipeline'
